

Microchip MPLAB XC8 Assembler V2.32 build 20210201212658 
                                                                                               Tue Dec 14 17:37:42 2021

Microchip MPLAB XC8 C Compiler v2.32 (Free license) build 20210201212658 Og1 
     1                           	processor	18F4550
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	idataCOMRAM,global,class=CODE,delta=1,noexec
     6                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     7                           	psect	dataCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     8                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     9                           	psect	text0,global,reloc=2,class=CODE,delta=1
    10                           	psect	text1,global,reloc=2,class=CODE,delta=1
    11                           	psect	text2,global,reloc=2,class=CODE,delta=1
    12                           	psect	text3,global,reloc=2,class=CODE,delta=1
    13                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    14                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    15                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=1,noexec
    16                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
    17  0000                     
    18                           ; Version 2.20
    19                           ; Generated 12/02/2020 GMT
    20                           ; 
    21                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    22                           ; All rights reserved.
    23                           ; 
    24                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    25                           ; 
    26                           ; Redistribution and use in source and binary forms, with or without modification, are
    27                           ; permitted provided that the following conditions are met:
    28                           ; 
    29                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    30                           ;        conditions and the following disclaimer.
    31                           ; 
    32                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    33                           ;        of conditions and the following disclaimer in the documentation and/or other
    34                           ;        materials provided with the distribution.
    35                           ; 
    36                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    37                           ;        software without specific prior written permission.
    38                           ; 
    39                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    40                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    41                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    42                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    43                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    44                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    45                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    46                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    47                           ; 
    48                           ; 
    49                           ; Code-generator required, PIC18F4550 Definitions
    50                           ; 
    51                           ; SFR Addresses
    52  0000                     
    53                           	psect	idataCOMRAM
    54  007F11                     __pidataCOMRAM:
    55                           	callstack 0
    56                           
    57                           ;initializer for main@F3485
    58  007F11  48                 	db	72
    59  007F12  6F                 	db	111
    60  007F13  6C                 	db	108
    61  007F14  61                 	db	97
    62  007F15  20                 	db	32
    63  007F16  4D                 	db	77
    64  007F17  75                 	db	117
    65  007F18  6E                 	db	110
    66  007F19  64                 	db	100
    67  007F1A  6F                 	db	111
    68  007F1B  00                 	db	0
    69  0000                     _RCREG	set	4014
    70  0000                     _PIR1bits	set	3998
    71  0000                     _TXREG	set	4013
    72  0000                     _SPBRG	set	4015
    73  0000                     _BAUDCONbits	set	4024
    74  0000                     _TXSTAbits	set	4012
    75  0000                     _TRISCbits	set	3988
    76  0000                     _RCSTAbits	set	4011
    77                           
    78                           ; #config settings
    79                           
    80                           	psect	cinit
    81  007F3A                     __pcinit:
    82                           	callstack 0
    83  007F3A                     start_initialization:
    84                           	callstack 0
    85  007F3A                     __initialization:
    86                           	callstack 0
    87                           
    88                           ; Initialize objects allocated to COMRAM (11 bytes)
    89                           ; load TBLPTR registers with __pidataCOMRAM
    90  007F3A  0E11               	movlw	low __pidataCOMRAM
    91  007F3C  6EF6               	movwf	tblptrl,c
    92  007F3E  0E7F               	movlw	high __pidataCOMRAM
    93  007F40  6EF7               	movwf	tblptrh,c
    94  007F42  0E00               	movlw	low (__pidataCOMRAM shr (0+16))
    95  007F44  6EF8               	movwf	tblptru,c
    96  007F46  EE00  F013         	lfsr	0,__pdataCOMRAM
    97  007F4A  EE10 F00B          	lfsr	1,11
    98  007F4E                     copy_data0:
    99  007F4E  0009               	tblrd		*+
   100  007F50  CFF5 FFEE          	movff	tablat,postinc0
   101  007F54  50E5               	movf	postdec1,w,c
   102  007F56  50E1               	movf	fsr1l,w,c
   103  007F58  E1FA               	bnz	copy_data0
   104  007F5A                     end_of_initialization:
   105                           	callstack 0
   106  007F5A                     __end_of__initialization:
   107                           	callstack 0
   108  007F5A  0100               	movlb	0
   109  007F5C  EFDF  F03F         	goto	_main	;jump to C main() function
   110                           
   111                           	psect	dataCOMRAM
   112  000013                     __pdataCOMRAM:
   113                           	callstack 0
   114  000013                     main@F3485:
   115                           	callstack 0
   116  000013                     	ds	11
   117                           
   118                           	psect	cstackCOMRAM
   119  000001                     __pcstackCOMRAM:
   120                           	callstack 0
   121  000001                     uartTransmitter@dataTrasmit:
   122                           	callstack 0
   123                           
   124                           ; 1 bytes @ 0x0
   125  000001                     	ds	1
   126  000002                     uartPrint@string:
   127                           	callstack 0
   128                           
   129                           ; 2 bytes @ 0x1
   130  000002                     	ds	2
   131  000004                     uartPrint@index:
   132                           	callstack 0
   133                           
   134                           ; 2 bytes @ 0x3
   135  000004                     	ds	2
   136  000006                     ??_main:
   137                           
   138                           ; 1 bytes @ 0x5
   139  000006                     	ds	2
   140  000008                     main@mensaje:
   141                           	callstack 0
   142                           
   143                           ; 11 bytes @ 0x7
   144  000008                     	ds	11
   145                           
   146 ;;
   147 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
   148 ;;
   149 ;; *************** function _main *****************
   150 ;; Defined at:
   151 ;;		line 13 in file "main.c"
   152 ;; Parameters:    Size  Location     Type
   153 ;;		None
   154 ;; Auto vars:     Size  Location     Type
   155 ;;  mensaje        11    7[COMRAM] unsigned char [11]
   156 ;; Return value:  Size  Location     Type
   157 ;;                  1    wreg      void 
   158 ;; Registers used:
   159 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
   160 ;; Tracked objects:
   161 ;;		On entry : 0/0
   162 ;;		On exit  : 0/0
   163 ;;		Unchanged: 0/0
   164 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   165 ;;      Params:         0       0       0       0       0       0       0       0       0
   166 ;;      Locals:        11       0       0       0       0       0       0       0       0
   167 ;;      Temps:          2       0       0       0       0       0       0       0       0
   168 ;;      Totals:        13       0       0       0       0       0       0       0       0
   169 ;;Total ram usage:       13 bytes
   170 ;; Hardware stack levels required when called: 2
   171 ;; This function calls:
   172 ;;		_uartInit
   173 ;;		_uartPrint
   174 ;; This function is called by:
   175 ;;		Startup code after reset
   176 ;; This function uses a non-reentrant model
   177 ;;
   178                           
   179                           	psect	text0
   180  007FBE                     __ptext0:
   181                           	callstack 0
   182  007FBE                     _main:
   183                           	callstack 29
   184  007FBE                     
   185                           ;main.c: 16:     uartInit();
   186  007FBE  ECB0  F03F         	call	_uartInit	;wreg free
   187  007FC2                     
   188                           ;main.c: 17:     char mensaje[] = "Hola Mundo";
   189  007FC2  EE20  F013         	lfsr	2,main@F3485
   190  007FC6  EE10  F008         	lfsr	1,main@mensaje
   191  007FCA  0E0A               	movlw	10
   192  007FCC                     u61:
   193  007FCC  CFDB FFE3          	movff	plusw2,plusw1
   194  007FD0  06E8               	decf	wreg,f,c
   195  007FD2  E2FC               	bc	u61
   196  007FD4                     l767:
   197                           
   198                           ;main.c: 19:         uartPrint(mensaje);
   199  007FD4  0E08               	movlw	low main@mensaje
   200  007FD6  6E02               	movwf	uartPrint@string^0,c
   201  007FD8  0E00               	movlw	high main@mensaje
   202  007FDA  6E03               	movwf	(uartPrint@string+1)^0,c
   203  007FDC  ECC4  F03F         	call	_uartPrint	;wreg free
   204  007FE0                     
   205                           ;main.c: 20:         _delay((unsigned long)((500)*(20000000/4000.0)));
   206  007FE0  0E0D               	movlw	13
   207  007FE2  6E07               	movwf	(??_main+1)^0,c
   208  007FE4  0EAF               	movlw	175
   209  007FE6  6E06               	movwf	??_main^0,c
   210  007FE8  0EB6               	movlw	182
   211  007FEA                     u77:
   212  007FEA  2EE8               	decfsz	wreg,f,c
   213  007FEC  D7FE               	bra	u77
   214  007FEE  2E06               	decfsz	??_main^0,f,c
   215  007FF0  D7FC               	bra	u77
   216  007FF2  2E07               	decfsz	(??_main+1)^0,f,c
   217  007FF4  D7FA               	bra	u77
   218  007FF6  D000               	nop2	
   219  007FF8  EFEA  F03F         	goto	l767
   220  007FFC  EF00  F000         	goto	start
   221  008000                     __end_of_main:
   222                           	callstack 0
   223                           
   224 ;; *************** function _uartPrint *****************
   225 ;; Defined at:
   226 ;;		line 61 in file "libuart4550.c"
   227 ;; Parameters:    Size  Location     Type
   228 ;;  string          2    1[COMRAM] PTR unsigned char 
   229 ;;		 -> main@mensaje(11), 
   230 ;; Auto vars:     Size  Location     Type
   231 ;;  index           2    3[COMRAM] int 
   232 ;; Return value:  Size  Location     Type
   233 ;;                  1    wreg      void 
   234 ;; Registers used:
   235 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
   236 ;; Tracked objects:
   237 ;;		On entry : 0/0
   238 ;;		On exit  : 0/0
   239 ;;		Unchanged: 0/0
   240 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   241 ;;      Params:         2       0       0       0       0       0       0       0       0
   242 ;;      Locals:         2       0       0       0       0       0       0       0       0
   243 ;;      Temps:          0       0       0       0       0       0       0       0       0
   244 ;;      Totals:         4       0       0       0       0       0       0       0       0
   245 ;;Total ram usage:        4 bytes
   246 ;; Hardware stack levels used: 1
   247 ;; Hardware stack levels required when called: 1
   248 ;; This function calls:
   249 ;;		_uartTransmitter
   250 ;; This function is called by:
   251 ;;		_main
   252 ;; This function uses a non-reentrant model
   253 ;;
   254                           
   255                           	psect	text1
   256  007F88                     __ptext1:
   257                           	callstack 0
   258  007F88                     _uartPrint:
   259                           	callstack 29
   260  007F88                     
   261                           ;libuart4550.c: 62:     int index =0;
   262  007F88  0E00               	movlw	0
   263  007F8A  6E05               	movwf	(uartPrint@index+1)^0,c
   264  007F8C  0E00               	movlw	0
   265  007F8E  6E04               	movwf	uartPrint@index^0,c
   266                           
   267                           ;libuart4550.c: 63:     while(string != 0x00){
   268  007F90  EFD5  F03F         	goto	l761
   269  007F94                     l757:
   270                           
   271                           ;libuart4550.c: 64:         uartTransmitter(string[index]);
   272  007F94  5004               	movf	uartPrint@index^0,w,c
   273  007F96  2402               	addwf	uartPrint@string^0,w,c
   274  007F98  6ED9               	movwf	fsr2l,c
   275  007F9A  5005               	movf	(uartPrint@index+1)^0,w,c
   276  007F9C  2003               	addwfc	(uartPrint@string+1)^0,w,c
   277  007F9E  6EDA               	movwf	fsr2h,c
   278  007FA0  50DF               	movf	indf2,w,c
   279  007FA2  EC8E  F03F         	call	_uartTransmitter
   280  007FA6                     
   281                           ;libuart4550.c: 65:         ++index;
   282  007FA6  4A04               	infsnz	uartPrint@index^0,f,c
   283  007FA8  2A05               	incf	(uartPrint@index+1)^0,f,c
   284  007FAA                     l761:
   285                           
   286                           ;libuart4550.c: 63:     while(string != 0x00){
   287  007FAA  5002               	movf	uartPrint@string^0,w,c
   288  007FAC  1003               	iorwf	(uartPrint@string+1)^0,w,c
   289  007FAE  A4D8               	btfss	status,2,c
   290  007FB0  EFDC  F03F         	goto	u51
   291  007FB4  EFDE  F03F         	goto	u50
   292  007FB8                     u51:
   293  007FB8  EFCA  F03F         	goto	l757
   294  007FBC                     u50:
   295  007FBC  0012               	return		;funcret
   296  007FBE                     __end_of_uartPrint:
   297                           	callstack 0
   298                           
   299 ;; *************** function _uartTransmitter *****************
   300 ;; Defined at:
   301 ;;		line 37 in file "libuart4550.c"
   302 ;; Parameters:    Size  Location     Type
   303 ;;  dataTrasmit     1    wreg     unsigned char 
   304 ;; Auto vars:     Size  Location     Type
   305 ;;  dataTrasmit     1    0[COMRAM] unsigned char 
   306 ;; Return value:  Size  Location     Type
   307 ;;                  1    wreg      void 
   308 ;; Registers used:
   309 ;;		wreg
   310 ;; Tracked objects:
   311 ;;		On entry : 0/0
   312 ;;		On exit  : 0/0
   313 ;;		Unchanged: 0/0
   314 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   315 ;;      Params:         0       0       0       0       0       0       0       0       0
   316 ;;      Locals:         1       0       0       0       0       0       0       0       0
   317 ;;      Temps:          0       0       0       0       0       0       0       0       0
   318 ;;      Totals:         1       0       0       0       0       0       0       0       0
   319 ;;Total ram usage:        1 bytes
   320 ;; Hardware stack levels used: 1
   321 ;; This function calls:
   322 ;;		Nothing
   323 ;; This function is called by:
   324 ;;		_uartPrint
   325 ;; This function uses a non-reentrant model
   326 ;;
   327                           
   328                           	psect	text2
   329  007F1C                     __ptext2:
   330                           	callstack 0
   331  007F1C                     _uartTransmitter:
   332                           	callstack 29
   333                           
   334                           ;incstack = 0
   335                           ;uartTransmitter@dataTrasmit stored from wreg
   336  007F1C  6E01               	movwf	uartTransmitter@dataTrasmit^0,c
   337  007F1E                     
   338                           ;libuart4550.c: 39:     TXSTAbits.SYNC=0;
   339  007F1E  98AC               	bcf	172,4,c	;volatile
   340                           
   341                           ;libuart4550.c: 40:     RCSTAbits.SPEN = 1;
   342  007F20  8EAB               	bsf	171,7,c	;volatile
   343                           
   344                           ;libuart4550.c: 41:     TXSTAbits.TXEN = 1;
   345  007F22  8AAC               	bsf	172,5,c	;volatile
   346                           
   347                           ;libuart4550.c: 43:     TXSTAbits.TXEN = 1;
   348  007F24  8AAC               	bsf	172,5,c	;volatile
   349  007F26                     l22:
   350  007F26  A2AC               	btfss	172,1,c	;volatile
   351  007F28  EF98  F03F         	goto	u11
   352  007F2C  EF9A  F03F         	goto	u10
   353  007F30                     u11:
   354  007F30  EF93  F03F         	goto	l22
   355  007F34                     u10:
   356  007F34                     
   357                           ;libuart4550.c: 45:     TXREG = dataTrasmit;
   358  007F34  C001  FFAD         	movff	uartTransmitter@dataTrasmit,4013	;volatile
   359  007F38  0012               	return		;funcret
   360  007F3A                     __end_of_uartTransmitter:
   361                           	callstack 0
   362                           
   363 ;; *************** function _uartInit *****************
   364 ;; Defined at:
   365 ;;		line 12 in file "libuart4550.c"
   366 ;; Parameters:    Size  Location     Type
   367 ;;		None
   368 ;; Auto vars:     Size  Location     Type
   369 ;;		None
   370 ;; Return value:  Size  Location     Type
   371 ;;                  1    wreg      void 
   372 ;; Registers used:
   373 ;;		wreg, status,2
   374 ;; Tracked objects:
   375 ;;		On entry : 0/0
   376 ;;		On exit  : 0/0
   377 ;;		Unchanged: 0/0
   378 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   379 ;;      Params:         0       0       0       0       0       0       0       0       0
   380 ;;      Locals:         0       0       0       0       0       0       0       0       0
   381 ;;      Temps:          0       0       0       0       0       0       0       0       0
   382 ;;      Totals:         0       0       0       0       0       0       0       0       0
   383 ;;Total ram usage:        0 bytes
   384 ;; Hardware stack levels used: 1
   385 ;; This function calls:
   386 ;;		Nothing
   387 ;; This function is called by:
   388 ;;		_main
   389 ;; This function uses a non-reentrant model
   390 ;;
   391                           
   392                           	psect	text3
   393  007F60                     __ptext3:
   394                           	callstack 0
   395  007F60                     _uartInit:
   396                           	callstack 30
   397  007F60                     
   398                           ;libuart4550.c: 13:     RCSTAbits.SPEN = 1;
   399  007F60  8EAB               	bsf	171,7,c	;volatile
   400                           
   401                           ;libuart4550.c: 14:     TRISCbits.RC7 = 1;
   402  007F62  8E94               	bsf	148,7,c	;volatile
   403                           
   404                           ;libuart4550.c: 15:     TRISCbits.RC6 = 0;
   405  007F64  9C94               	bcf	148,6,c	;volatile
   406                           
   407                           ;libuart4550.c: 18:     TXSTAbits.TX9 = 0;
   408  007F66  9CAC               	bcf	172,6,c	;volatile
   409                           
   410                           ;libuart4550.c: 19:     TXSTAbits.TXEN = 1;
   411  007F68  8AAC               	bsf	172,5,c	;volatile
   412                           
   413                           ;libuart4550.c: 20:     TXSTAbits.SYNC=0;
   414  007F6A  98AC               	bcf	172,4,c	;volatile
   415                           
   416                           ;libuart4550.c: 21:     TXSTAbits.SENDB = 0;
   417  007F6C  96AC               	bcf	172,3,c	;volatile
   418                           
   419                           ;libuart4550.c: 22:     TXSTAbits.BRGH = 0;
   420  007F6E  94AC               	bcf	172,2,c	;volatile
   421                           
   422                           ;libuart4550.c: 23:     TXSTAbits.TRMT = 1;
   423  007F70  82AC               	bsf	172,1,c	;volatile
   424                           
   425                           ;libuart4550.c: 25:     RCSTAbits.SPEN = 1;
   426  007F72  8EAB               	bsf	171,7,c	;volatile
   427                           
   428                           ;libuart4550.c: 26:     RCSTAbits.RX9 = 0;
   429  007F74  9CAB               	bcf	171,6,c	;volatile
   430                           
   431                           ;libuart4550.c: 27:     RCSTAbits.CREN = 1;
   432  007F76  88AB               	bsf	171,4,c	;volatile
   433                           
   434                           ;libuart4550.c: 28:     RCSTAbits.ADDEN = 0;
   435  007F78  96AB               	bcf	171,3,c	;volatile
   436                           
   437                           ;libuart4550.c: 29:     RCSTAbits.FERR = 0;
   438  007F7A  94AB               	bcf	171,2,c	;volatile
   439                           
   440                           ;libuart4550.c: 30:     RCSTAbits.OERR = 0;
   441  007F7C  92AB               	bcf	171,1,c	;volatile
   442                           
   443                           ;libuart4550.c: 32:     BAUDCONbits.ABDOVF = 0;
   444  007F7E  9EB8               	bcf	184,7,c	;volatile
   445                           
   446                           ;libuart4550.c: 33:     BAUDCONbits.BRG16 = 1;
   447  007F80  86B8               	bsf	184,3,c	;volatile
   448  007F82                     
   449                           ;libuart4550.c: 34:     SPBRG = 10;
   450  007F82  0E0A               	movlw	10
   451  007F84  6EAF               	movwf	175,c	;volatile
   452  007F86  0012               	return		;funcret
   453  007F88                     __end_of_uartInit:
   454                           	callstack 0
   455  0000                     
   456                           	psect	rparam
   457  0000                     
   458                           	psect	idloc
   459                           
   460                           ;Config register IDLOC0 @ 0x200000
   461                           ;	unspecified, using default values
   462  200000                     	org	2097152
   463  200000  FF                 	db	255
   464                           
   465                           ;Config register IDLOC1 @ 0x200001
   466                           ;	unspecified, using default values
   467  200001                     	org	2097153
   468  200001  FF                 	db	255
   469                           
   470                           ;Config register IDLOC2 @ 0x200002
   471                           ;	unspecified, using default values
   472  200002                     	org	2097154
   473  200002  FF                 	db	255
   474                           
   475                           ;Config register IDLOC3 @ 0x200003
   476                           ;	unspecified, using default values
   477  200003                     	org	2097155
   478  200003  FF                 	db	255
   479                           
   480                           ;Config register IDLOC4 @ 0x200004
   481                           ;	unspecified, using default values
   482  200004                     	org	2097156
   483  200004  FF                 	db	255
   484                           
   485                           ;Config register IDLOC5 @ 0x200005
   486                           ;	unspecified, using default values
   487  200005                     	org	2097157
   488  200005  FF                 	db	255
   489                           
   490                           ;Config register IDLOC6 @ 0x200006
   491                           ;	unspecified, using default values
   492  200006                     	org	2097158
   493  200006  FF                 	db	255
   494                           
   495                           ;Config register IDLOC7 @ 0x200007
   496                           ;	unspecified, using default values
   497  200007                     	org	2097159
   498  200007  FF                 	db	255
   499                           
   500                           	psect	config
   501                           
   502                           ;Config register CONFIG1L @ 0x300000
   503                           ;	PLL Prescaler Selection bits
   504                           ;	PLLDIV = 1, No prescale (4 MHz oscillator input drives PLL directly)
   505                           ;	System Clock Postscaler Selection bits
   506                           ;	CPUDIV = OSC1_PLL2, [Primary Oscillator Src: /1][96 MHz PLL Src: /2]
   507                           ;	USB Clock Selection bit (used in Full-Speed USB mode only; UCFG:FSEN = 1)
   508                           ;	USBDIV = 1, USB clock source comes directly from the primary oscillator block with no 
      +                          postscale
   509  300000                     	org	3145728
   510  300000  00                 	db	0
   511                           
   512                           ;Config register CONFIG1H @ 0x300001
   513                           ;	Oscillator Selection bits
   514                           ;	FOSC = HS, HS oscillator (HS)
   515                           ;	Fail-Safe Clock Monitor Enable bit
   516                           ;	FCMEN = OFF, Fail-Safe Clock Monitor disabled
   517                           ;	Internal/External Oscillator Switchover bit
   518                           ;	IESO = OFF, Oscillator Switchover mode disabled
   519  300001                     	org	3145729
   520  300001  0C                 	db	12
   521                           
   522                           ;Config register CONFIG2L @ 0x300002
   523                           ;	Power-up Timer Enable bit
   524                           ;	PWRT = OFF, PWRT disabled
   525                           ;	Brown-out Reset Enable bits
   526                           ;	BOR = ON, Brown-out Reset enabled in hardware only (SBOREN is disabled)
   527                           ;	Brown-out Reset Voltage bits
   528                           ;	BORV = 3, Minimum setting 2.05V
   529                           ;	USB Voltage Regulator Enable bit
   530                           ;	VREGEN = OFF, USB voltage regulator disabled
   531  300002                     	org	3145730
   532  300002  1F                 	db	31
   533                           
   534                           ;Config register CONFIG2H @ 0x300003
   535                           ;	Watchdog Timer Enable bit
   536                           ;	WDT = OFF, WDT disabled (control is placed on the SWDTEN bit)
   537                           ;	Watchdog Timer Postscale Select bits
   538                           ;	WDTPS = 32768, 1:32768
   539  300003                     	org	3145731
   540  300003  1E                 	db	30
   541                           
   542                           ; Padding undefined space
   543  300004                     	org	3145732
   544  300004  FF                 	db	255
   545                           
   546                           ;Config register CONFIG3H @ 0x300005
   547                           ;	CCP2 MUX bit
   548                           ;	CCP2MX = ON, CCP2 input/output is multiplexed with RC1
   549                           ;	PORTB A/D Enable bit
   550                           ;	PBADEN = OFF, PORTB<4:0> pins are configured as digital I/O on Reset
   551                           ;	Low-Power Timer 1 Oscillator Enable bit
   552                           ;	LPT1OSC = OFF, Timer1 configured for higher power operation
   553                           ;	MCLR Pin Enable bit
   554                           ;	MCLRE = OFF, RE3 input pin enabled; MCLR pin disabled
   555  300005                     	org	3145733
   556  300005  01                 	db	1
   557                           
   558                           ;Config register CONFIG4L @ 0x300006
   559                           ;	Stack Full/Underflow Reset Enable bit
   560                           ;	STVREN = ON, Stack full/underflow will cause Reset
   561                           ;	Single-Supply ICSP Enable bit
   562                           ;	LVP = ON, Single-Supply ICSP enabled
   563                           ;	Dedicated In-Circuit Debug/Programming Port (ICPORT) Enable bit
   564                           ;	ICPRT = OFF, ICPORT disabled
   565                           ;	Extended Instruction Set Enable bit
   566                           ;	XINST = OFF, Instruction set extension and Indexed Addressing mode disabled (Legacy mo
      +                          de)
   567                           ;	Background Debugger Enable bit
   568                           ;	DEBUG = 0x1, unprogrammed default
   569  300006                     	org	3145734
   570  300006  85                 	db	133
   571                           
   572                           ; Padding undefined space
   573  300007                     	org	3145735
   574  300007  FF                 	db	255
   575                           
   576                           ;Config register CONFIG5L @ 0x300008
   577                           ;	Code Protection bit
   578                           ;	CP0 = OFF, Block 0 (000800-001FFFh) is not code-protected
   579                           ;	Code Protection bit
   580                           ;	CP1 = OFF, Block 1 (002000-003FFFh) is not code-protected
   581                           ;	Code Protection bit
   582                           ;	CP2 = OFF, Block 2 (004000-005FFFh) is not code-protected
   583                           ;	Code Protection bit
   584                           ;	CP3 = OFF, Block 3 (006000-007FFFh) is not code-protected
   585  300008                     	org	3145736
   586  300008  0F                 	db	15
   587                           
   588                           ;Config register CONFIG5H @ 0x300009
   589                           ;	Boot Block Code Protection bit
   590                           ;	CPB = OFF, Boot block (000000-0007FFh) is not code-protected
   591                           ;	Data EEPROM Code Protection bit
   592                           ;	CPD = OFF, Data EEPROM is not code-protected
   593  300009                     	org	3145737
   594  300009  C0                 	db	192
   595                           
   596                           ;Config register CONFIG6L @ 0x30000A
   597                           ;	Write Protection bit
   598                           ;	WRT0 = OFF, Block 0 (000800-001FFFh) is not write-protected
   599                           ;	Write Protection bit
   600                           ;	WRT1 = OFF, Block 1 (002000-003FFFh) is not write-protected
   601                           ;	Write Protection bit
   602                           ;	WRT2 = OFF, Block 2 (004000-005FFFh) is not write-protected
   603                           ;	Write Protection bit
   604                           ;	WRT3 = OFF, Block 3 (006000-007FFFh) is not write-protected
   605  30000A                     	org	3145738
   606  30000A  0F                 	db	15
   607                           
   608                           ;Config register CONFIG6H @ 0x30000B
   609                           ;	Configuration Register Write Protection bit
   610                           ;	WRTC = OFF, Configuration registers (300000-3000FFh) are not write-protected
   611                           ;	Boot Block Write Protection bit
   612                           ;	WRTB = OFF, Boot block (000000-0007FFh) is not write-protected
   613                           ;	Data EEPROM Write Protection bit
   614                           ;	WRTD = OFF, Data EEPROM is not write-protected
   615  30000B                     	org	3145739
   616  30000B  E0                 	db	224
   617                           
   618                           ;Config register CONFIG7L @ 0x30000C
   619                           ;	Table Read Protection bit
   620                           ;	EBTR0 = OFF, Block 0 (000800-001FFFh) is not protected from table reads executed in ot
      +                          her blocks
   621                           ;	Table Read Protection bit
   622                           ;	EBTR1 = OFF, Block 1 (002000-003FFFh) is not protected from table reads executed in ot
      +                          her blocks
   623                           ;	Table Read Protection bit
   624                           ;	EBTR2 = OFF, Block 2 (004000-005FFFh) is not protected from table reads executed in ot
      +                          her blocks
   625                           ;	Table Read Protection bit
   626                           ;	EBTR3 = OFF, Block 3 (006000-007FFFh) is not protected from table reads executed in ot
      +                          her blocks
   627  30000C                     	org	3145740
   628  30000C  0F                 	db	15
   629                           
   630                           ;Config register CONFIG7H @ 0x30000D
   631                           ;	Boot Block Table Read Protection bit
   632                           ;	EBTRB = OFF, Boot block (000000-0007FFh) is not protected from table reads executed in
      +                           other blocks
   633  30000D                     	org	3145741
   634  30000D  40                 	db	64
   635                           tosu	equ	0xFFF
   636                           tosh	equ	0xFFE
   637                           tosl	equ	0xFFD
   638                           stkptr	equ	0xFFC
   639                           pclatu	equ	0xFFB
   640                           pclath	equ	0xFFA
   641                           pcl	equ	0xFF9
   642                           tblptru	equ	0xFF8
   643                           tblptrh	equ	0xFF7
   644                           tblptrl	equ	0xFF6
   645                           tablat	equ	0xFF5
   646                           prodh	equ	0xFF4
   647                           prodl	equ	0xFF3
   648                           indf0	equ	0xFEF
   649                           postinc0	equ	0xFEE
   650                           postdec0	equ	0xFED
   651                           preinc0	equ	0xFEC
   652                           plusw0	equ	0xFEB
   653                           fsr0h	equ	0xFEA
   654                           fsr0l	equ	0xFE9
   655                           wreg	equ	0xFE8
   656                           indf1	equ	0xFE7
   657                           postinc1	equ	0xFE6
   658                           postdec1	equ	0xFE5
   659                           preinc1	equ	0xFE4
   660                           plusw1	equ	0xFE3
   661                           fsr1h	equ	0xFE2
   662                           fsr1l	equ	0xFE1
   663                           bsr	equ	0xFE0
   664                           indf2	equ	0xFDF
   665                           postinc2	equ	0xFDE
   666                           postdec2	equ	0xFDD
   667                           preinc2	equ	0xFDC
   668                           plusw2	equ	0xFDB
   669                           fsr2h	equ	0xFDA
   670                           fsr2l	equ	0xFD9
   671                           status	equ	0xFD8

Data Sizes:
    Strings     0
    Constant    0
    Data        11
    BSS         0
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           95     18      29
    BANK0           160      0       0
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0

Pointer List with Targets:

    uartPrint@string	PTR unsigned char  size(2) Largest target is 11
		 -> main@mensaje(COMRAM[11]), 


Critical Paths under _main in COMRAM

    _main->_uartPrint
    _uartPrint->_uartTransmitter

Critical Paths under _main in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                13    13      0     183
                                              5 COMRAM    13    13      0
                           _uartInit
                          _uartPrint
 ---------------------------------------------------------------------------------
 (1) _uartPrint                                            4     2      2     159
                                              1 COMRAM     4     2      2
                    _uartTransmitter
 ---------------------------------------------------------------------------------
 (2) _uartTransmitter                                      1     1      0      15
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (1) _uartInit                                             0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _uartInit
   _uartPrint
     _uartTransmitter

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             7FF      0       0      21        0.0%
EEDATA             100      0       0       0        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0       0       7        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0      0       0       5        0.0%
BITCOMRAM           5F      0       0       0        0.0%
COMRAM              5F     12      1D       1       30.5%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      1D      20        0.0%
DATA                 0      0      1D       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.32 build 20210201212658 
Symbol Table                                                                                   Tue Dec 14 17:37:42 2021

                        l22 7F26                          l25 7F38                          l19 7F86  
                        l37 7FBC                          u10 7F34                          u11 7F30  
                        u50 7FBC                          u51 7FB8                          u61 7FCC  
                        u77 7FEA                         l731 7F34                         l733 7F60  
                       l735 7F82                         l729 7F1E                         l761 7FAA  
                       l755 7F88                         l763 7FBE                         l757 7F94  
                       l765 7FC2                         l759 7FA6                         l767 7FD4  
                       l769 7FE0                         wreg 000FE8                 main@mensaje 0008  
                      _main 7FBE                        indf2 000FDF                        fsr1l 000FE1  
                      fsr2l 000FD9                        start 0000                ___param_bank 000000  
uartTransmitter@dataTrasmit 0001                       ?_main 0001                       _RCREG 000FAE  
                     _SPBRG 000FAF                       _TXREG 000FAD                       tablat 000FF5  
                     plusw1 000FE3                       plusw2 000FDB                       status 000FD8  
           __initialization 7F3A                __end_of_main 8000                      ??_main 0006  
             __activetblptr 000000             _uartTransmitter 7F1C                      isa$std 000001  
              __pdataCOMRAM 0013            __end_of_uartInit 7F88                      tblptrh 000FF7  
                    tblptrl 000FF6                      tblptru 000FF8                  __accesstop 0060  
   __end_of__initialization 7F5A               ___rparam_used 000001              __pcstackCOMRAM 0001  
   __end_of_uartTransmitter 7F3A          __size_of_uartPrint 0036             uartPrint@string 0002  
                   __Hparam 0000                     __Lparam 0000                   ?_uartInit 0001  
                   __pcinit 7F3A                     __ramtop 0800                     __ptext0 7FBE  
                   __ptext1 7F88                     __ptext2 7F1C                     __ptext3 7F60  
      end_of_initialization 7F5A            ?_uartTransmitter 0001           __end_of_uartPrint 7FBE  
                ??_uartInit 0001                   _RCSTAbits 000FAB                     postdec1 000FE5  
                   postinc0 000FEE                   _TRISCbits 000F94                   _TXSTAbits 000FAC  
               _BAUDCONbits 000FB8               __pidataCOMRAM 7F11         start_initialization 7F3A  
         __size_of_uartInit 0028              uartPrint@index 0004                    _PIR1bits 000F9E  
                 _uartPrint 7F88                   main@F3485 0013                   copy_data0 7F4E  
                  __Hrparam 0000                    __Lrparam 0000    __size_of_uartTransmitter 001E  
                ?_uartPrint 0002               __size_of_main 0042                    _uartInit 7F60  
                  isa$xinst 000000                 ??_uartPrint 0004           ??_uartTransmitter 0001  
